//to find mongooseURI
require("dotenv").config();
//to connect with database
require("../startup/db")();
const { Role } = require("../models/role");

const roles=[
    {
        roleName:"SuperAdmin",
        priority:1,
        rights:{
            role:{
                canCreateRole:true,
                canUpdateRole:true,
                canDeleteRole:true
               },
           user:{
            canCreateUser:true,
            canUpdateUser:true,
            canDeleteUser:true
           },
           category:{
            canCreateCategory:true,
            canUpdateCategory:true,
            canDeleteCategory:true
           },
           store:{
            canCreateStore:true,
            canUpdateStore:true,
            canDeleteStore:true 
           },
           invoice:{
            canUpdateInvoice:true,
            canCreateInvoice:true,
            canDeleteInvoice:true 
           },
           deliveryNote:{
            canUpdateDeliveryNote:true,
            canCreateDeliveryNote:true,
            canDeleteDeliveryNote:true  
           }
        }
    },
    {
        roleName:"userCUDoperator",
        priority:2,
        rights:{
            role:{
                canCreateRole:false,
                canUpdateRole:false,
                canDeleteRole:false
               },
           user:{
            canUpdateUser:true,
            canCreateUser:true,
            canDeleteUser:true
           },
           category:{
            canCreateCategory:true,
            canUpdateCategory:true,
            canDeleteCategory:true
           },
           store:{
            canCreateStore:true,
            canUpdateStore:true,
            canDeleteStore:true 
           },
           product:{
            canCreateProduct:true,
            canUpdateProduct:true,
            canDeleteProduct:true
           },
           invoice:{
            canUpdateInvoice:true,
            canCreateInvoice:true,
            canDeleteInvoice:true 
           },
           deliveryNote:{
            canUpdateDeliveryNote:true,
            canCreateDeliveryNote:true,
            canDeleteDeliveryNote:true  
           }
        }
    },
    {
        roleName:"storeCUDoperator",
        priority:3,
        rights:{
            role:{
                canCreateRole:false,
                canUpdateRole:false,
                canDeleteRole:false
               },
           user:{
            canUpdateUser:false,
            canCreateUser:false,
            canDeleteUser:false
           },
           category:{
            canCreateCategory:true,
            canUpdateCategory:true,
            canDeleteCategory:true
           },
           store:{
            canCreateStore:true,
            canUpdateStore:true,
            canDeleteStore:true 
           },
           product:{
            canCreateProduct:true,
            canUpdateProduct:true,
            canDeleteProduct:true
           },
           invoice:{
            canCreateInvoice:true,
            canUpdateInvoice:true,
            canDeleteInvoice:true 
           },
           deliveryNote:{
            canCreateDeliveryNote:true,
            canUpdateDeliveryNote:true,
            canDeleteDeliveryNote:true  
           }
        }
    },
    {
        roleName:"productAndCategoryCUDoperator",
        priority:4,
        rights:{
            role:{
                canCreateRole:false,
                canUpdateRole:false,
                canDeleteRole:false
               },
           user:{
                canUpdateUser:false,
                canCreateUser:false,
                canDeleteUser:false
           },
           store:{
            canCreateStore:false,
            canUpdateStore:false,
            canDeleteStore:false 
       },
           category:{
                canCreateCategory:true,
                canUpdateCategory:true,
                canDeleteCategory:true
           },
           product:{
                canCreateProduct:true,
                canUpdateProduct:true,
                canDeleteProduct:true
           },
           invoice:{
                canCreateInvoice:true,
                canUpdateInvoice:true,
                canDeleteInvoice:true 
           },
           deliveryNote:{
                canCreateDeliveryNote:true,
                canUpdateDeliveryNote:true,
                canDeleteDeliveryNote:true  
           }
        }
    },
    {
            roleName:"invoiceAndDeliveryNoteCUDoperator",
            priority:5,
            rights:{
                role:{
                    canCreateRole:false,
                    canUpdateRole:false,
                    canDeleteRole:false
                   },
               user:{
                canUpdateUser:false,
                canCreateUser:false,
                canDeleteUser:false
               },
               category:{
                canCreateCategory:false,
                canUpdateCategory:false,
                canDeleteCategory:false
               },
               store:{
                canCreateStore:false,
                canUpdateStore:false,
                canDeleteStore:false 
               },
               product:{
                canCreateProduct:false,
                canUpdateProduct:false,
                canDeleteProduct:false
               },
               invoice:{
                canCreateInvoice:true,
                canUpdateInvoice:true,
                canDeleteInvoice:true 
               },
               deliveryNote:{
                canCreateDeliveryNote:true,
                canUpdateDeliveryNote:true,
                canDeleteDeliveryNote:true  
               }
            }
    },
]

async function importRoles(){
   const roleExists = await Role.find({});
   if(roleExists.length>0){
       console.log("Roles already exist");
       process.exit();
   }

   await Role.insertMany(roles);
   console.log("Roles are inserted successfully")
   process.exit();
}

importRoles();